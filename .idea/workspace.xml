<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b4a611aa-440b-4a2d-be05-a0aea4955c6b" name="Changes" comment="Abstract out backend isa specific stuff into a Compiler interface">
      <change afterPath="$PROJECT_DIR$/examples/build-aarch.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/debug-aarch.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/gdb-aarch.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/run-aarch.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rules/aarch64.rule" beforeDir="false" afterPath="$PROJECT_DIR$/rules/aarch64.rule" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/d_m/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/d_m/Main.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/d_m/compiler/AARCH64Compiler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/d_m/compiler/AARCH64Compiler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/d_m/regalloc/asm/AARCH64AssemblyWriter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/d_m/regalloc/asm/AARCH64AssemblyWriter.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Record" />
        <option value="JUnit5 Test Class" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2dPYgNbikAZxKnPRYHFlSV3j7U1" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.Fibonacci.executor": "Run",
    "Application.FibonacciAARCH64.executor": "Run",
    "Application.FibonacciX86_64.executor": "Run",
    "Application.Funswap.executor": "Run",
    "Application.FunswapAARCH64.executor": "Run",
    "Application.Gen.executor": "Run",
    "Application.GenAARCH64.executor": "Run",
    "Application.GenX86_64.executor": "Run",
    "Application.Main.executor": "Run",
    "JUnit.All tests.executor": "Run",
    "JUnit.BlockTest.createBlocks.executor": "Run",
    "JUnit.BlockTest.executor": "Run",
    "JUnit.BuilderTest.convertFunction.executor": "Debug",
    "JUnit.DataflowTest.genKill.executor": "Run",
    "JUnit.DataflowTest.genKillAndLiveness.executor": "Run",
    "JUnit.IntervalTest.addRange.executor": "Run",
    "JUnit.LengauerTarjanTest.idom.executor": "Run",
    "JUnit.LinearScanTest.scanAARCH64.executor": "Debug",
    "JUnit.LinearScanTest.scanX86.executor": "Debug",
    "JUnit.MachineBasicBlockTest.addBeforeTerminator.executor": "Run",
    "JUnit.MachineBasicBlockTest.getPhiUses.executor": "Run",
    "JUnit.ParserTest.parseBinaryExpression.executor": "Debug",
    "JUnit.ParserTest.parseIfStatement.executor": "Run",
    "JUnit.ParserTest.parseIfStatementSemicolons.executor": "Run",
    "JUnit.ParserTest.parseProgram.executor": "Run",
    "JUnit.ParserTest.parseWhileStatement.executor": "Run",
    "JUnit.RangeTest.overlaps.executor": "Run",
    "JUnit.SSADAGTest.postorder.executor": "Run",
    "JUnit.ThreeAddressCodeTest.normalize.executor": "Run",
    "JUnit.UniqueRenamerTest.executor": "Run",
    "Maven.baby-pascal [clean,compile,exec:java].executor": "Run",
    "Maven.baby-pascal [clean].executor": "Run",
    "Maven.baby-pascal [org.apache.maven.plugins:maven-clean-plugin:3.2.0:clean].executor": "Run",
    "Maven.baby-pascal [org.apache.maven.plugins:maven-compiler-plugin:3.11.0:compile].executor": "Run",
    "Maven.baby-pascal [org.codehaus.mojo:exec-maven-plugin:3.1.0:java].executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
    "git-widget-placeholder": "master",
    "ignore.preview.features.used": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/home/d/Documents/mirrored/baby-pascal",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "editor.preferences.tabs"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.d_m.ast" />
      <recent name="com.d_m.gen" />
      <recent name="com.d_m.dag" />
      <recent name="com.d_m.code" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="com.d_m.regalloc.linear" />
      <recent name="com.d_m.select.instr" />
      <recent name="com.d_m.pass" />
      <recent name="com.d_m.ssa" />
      <recent name="com.d_m.ast" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="com.d_m.regalloc" />
      <recent name="com.d_m.select.instr" />
      <recent name="com.d_m.select" />
      <recent name="com.d_m.code" />
      <recent name="com.d_m.code.normalize" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="com.d_m.parser" />
      <recent name="com.d_m.regalloc.linear" />
      <recent name="com.d_m.select.instr" />
      <recent name="com.d_m.deconstruct" />
      <recent name="com.d_m.select.dag" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.d_m.select.instr" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean" />
      <command value="mvn clean compile exec:java" />
    </option>
  </component>
  <component name="RunManager" selected="Application.FibonacciX86_64">
    <configuration name="FibonacciAARCH64" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.d_m.Main" />
      <module name="baby-pascal" />
      <option name="PROGRAM_PARAMETERS" value="-aarch64 examples/fibonacci.pas examples/fibonacci" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FibonacciX86_64" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.d_m.Main" />
      <module name="baby-pascal" />
      <option name="PROGRAM_PARAMETERS" value="-x86_64 examples/fibonacci.pas examples/fibonacci" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FunswapAARCH64" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.d_m.Main" />
      <module name="baby-pascal" />
      <option name="PROGRAM_PARAMETERS" value="-aarch64 examples/funswap.pas examples/funswap" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FunswapX86_64" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.d_m.Main" />
      <module name="baby-pascal" />
      <option name="PROGRAM_PARAMETERS" value="-x86_64 examples/funswap.pas examples/funswap" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GenAARCH64" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.d_m.gen.Gen" />
      <module name="baby-pascal" />
      <option name="PROGRAM_PARAMETERS" value="rules/aarch64.rule" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.gen.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GenX86_64" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="com.d_m.gen.Gen" />
      <module name="baby-pascal" />
      <option name="PROGRAM_PARAMETERS" value="rules/x86_64.rule" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.gen.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="All tests" type="JUnit" factoryName="JUnit">
      <module name="baby-pascal" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="TEST_OBJECT" value="package" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="wholeProject" />
      </option>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LinearScanTest.scanAARCH64" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="baby-pascal" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.regalloc.linear.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.d_m.regalloc.linear" />
      <option name="MAIN_CLASS_NAME" value="com.d_m.regalloc.linear.LinearScanTest" />
      <option name="METHOD_NAME" value="scanAARCH64" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LinearScanTest.scanX86" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="baby-pascal" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.regalloc.linear.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.d_m.regalloc.linear" />
      <option name="MAIN_CLASS_NAME" value="com.d_m.regalloc.linear.LinearScanTest" />
      <option name="METHOD_NAME" value="scanX86" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ParserTest.parseIfStatementSemicolons" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="baby-pascal" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.parser.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.d_m.parser" />
      <option name="MAIN_CLASS_NAME" value="com.d_m.parser.ParserTest" />
      <option name="METHOD_NAME" value="parseIfStatementSemicolons" />
      <option name="TEST_OBJECT" value="method" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="wholeProject" />
      </option>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ParserTest.parseProgram" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="baby-pascal" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.parser.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.d_m.parser" />
      <option name="MAIN_CLASS_NAME" value="com.d_m.parser.ParserTest" />
      <option name="METHOD_NAME" value="parseProgram" />
      <option name="TEST_OBJECT" value="method" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="wholeProject" />
      </option>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ParserTest.parseWhileStatement" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="baby-pascal" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.d_m.parser.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.d_m.parser" />
      <option name="MAIN_CLASS_NAME" value="com.d_m.parser.ParserTest" />
      <option name="METHOD_NAME" value="parseWhileStatement" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.FibonacciX86_64" />
      <item itemvalue="Application.FibonacciAARCH64" />
      <item itemvalue="Application.FunswapX86_64" />
      <item itemvalue="Application.FunswapAARCH64" />
      <item itemvalue="Application.GenX86_64" />
      <item itemvalue="Application.GenAARCH64" />
      <item itemvalue="JUnit.All tests" />
      <item itemvalue="JUnit.LinearScanTest.scanAARCH64" />
      <item itemvalue="JUnit.LinearScanTest.scanX86" />
      <item itemvalue="JUnit.ParserTest.parseIfStatementSemicolons" />
      <item itemvalue="JUnit.ParserTest.parseProgram" />
      <item itemvalue="JUnit.ParserTest.parseWhileStatement" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.LinearScanTest.scanAARCH64" />
        <item itemvalue="JUnit.LinearScanTest.scanX86" />
        <item itemvalue="JUnit.ParserTest.parseIfStatementSemicolons" />
        <item itemvalue="JUnit.ParserTest.parseProgram" />
        <item itemvalue="JUnit.ParserTest.parseWhileStatement" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b4a611aa-440b-4a2d-be05-a0aea4955c6b" name="Changes" comment="" />
      <created>1709911294056</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1709911294056</updated>
    </task>
    <task id="LOCAL-00208" summary="Adds parallel move before compare instruction in a branch and doesn't add empty parallel moves">
      <option name="closed" value="true" />
      <created>1729438254120</created>
      <option name="number" value="00208" />
      <option name="presentableId" value="LOCAL-00208" />
      <option name="project" value="LOCAL" />
      <updated>1729438254120</updated>
    </task>
    <task id="LOCAL-00209" summary="MachineBasicBlock remembers terminator and parallel moves are inserted before terminator">
      <option name="closed" value="true" />
      <created>1729864675284</created>
      <option name="number" value="00209" />
      <option name="presentableId" value="LOCAL-00209" />
      <option name="project" value="LOCAL" />
      <updated>1729864675285</updated>
    </task>
    <task id="LOCAL-00210" summary="Attempt modification to liveness equations to handle phi nodes">
      <option name="closed" value="true" />
      <created>1729955149695</created>
      <option name="number" value="00210" />
      <option name="presentableId" value="LOCAL-00210" />
      <option name="project" value="LOCAL" />
      <updated>1729955149695</updated>
    </task>
    <task id="LOCAL-00211" summary="Add unit tests for getPhiUses() and getPhiDefs()">
      <option name="closed" value="true" />
      <created>1729957035450</created>
      <option name="number" value="00211" />
      <option name="presentableId" value="LOCAL-00211" />
      <option name="project" value="LOCAL" />
      <updated>1729957035450</updated>
    </task>
    <task id="LOCAL-00212" summary="Small fixes to linear scan so that it assigns registers">
      <option name="closed" value="true" />
      <created>1730470888911</created>
      <option name="number" value="00212" />
      <option name="presentableId" value="LOCAL-00212" />
      <option name="project" value="LOCAL" />
      <updated>1730470888912</updated>
    </task>
    <task id="LOCAL-00213" summary="Handle fixed intervals and more debugging on linear scan">
      <option name="closed" value="true" />
      <created>1730553373667</created>
      <option name="number" value="00213" />
      <option name="presentableId" value="LOCAL-00213" />
      <option name="project" value="LOCAL" />
      <updated>1730553373667</updated>
    </task>
    <task id="LOCAL-00214" summary="Make unhandled a set and modify interval comparison function so TreeSet doesn't truncate intervals">
      <option name="closed" value="true" />
      <created>1730651435934</created>
      <option name="number" value="00214" />
      <option name="presentableId" value="LOCAL-00214" />
      <option name="project" value="LOCAL" />
      <updated>1730651435935</updated>
    </task>
    <task id="LOCAL-00215" summary="Start attempt at joining intervals before linear scan">
      <option name="closed" value="true" />
      <created>1731686472229</created>
      <option name="number" value="00215" />
      <option name="presentableId" value="LOCAL-00215" />
      <option name="project" value="LOCAL" />
      <updated>1731686472229</updated>
    </task>
    <task id="LOCAL-00216" summary="Start refactor of interval to include multiple ranges">
      <option name="closed" value="true" />
      <created>1731882873503</created>
      <option name="number" value="00216" />
      <option name="presentableId" value="LOCAL-00216" />
      <option name="project" value="LOCAL" />
      <updated>1731882873503</updated>
    </task>
    <task id="LOCAL-00217" summary="Use virtual register also as key in interval map to handle multiple output instructions">
      <option name="closed" value="true" />
      <created>1732292120203</created>
      <option name="number" value="00217" />
      <option name="presentableId" value="LOCAL-00217" />
      <option name="project" value="LOCAL" />
      <updated>1732292120203</updated>
    </task>
    <task id="LOCAL-00218" summary="Fix some bugs in the live interval building">
      <option name="closed" value="true" />
      <created>1732378177669</created>
      <option name="number" value="00218" />
      <option name="presentableId" value="LOCAL-00218" />
      <option name="project" value="LOCAL" />
      <updated>1732378177669</updated>
    </task>
    <task id="LOCAL-00219" summary="Fix some bugs in joining intervals and handle case where mov operand has a physical register constraint">
      <option name="closed" value="true" />
      <created>1732471931475</created>
      <option name="number" value="00219" />
      <option name="presentableId" value="LOCAL-00219" />
      <option name="project" value="LOCAL" />
      <updated>1732471931476</updated>
    </task>
    <task id="LOCAL-00220" summary="Cleanup redundant moves">
      <option name="closed" value="true" />
      <created>1732472101292</created>
      <option name="number" value="00220" />
      <option name="presentableId" value="LOCAL-00220" />
      <option name="project" value="LOCAL" />
      <updated>1732472101292</updated>
    </task>
    <task id="LOCAL-00221" summary="Attempt debugging why phi intervals are not being joined properly">
      <option name="closed" value="true" />
      <created>1732858591237</created>
      <option name="number" value="00221" />
      <option name="presentableId" value="LOCAL-00221" />
      <option name="project" value="LOCAL" />
      <updated>1732858591238</updated>
    </task>
    <task id="LOCAL-00222" summary="Fix range overlap checking and register rewriting">
      <option name="closed" value="true" />
      <created>1734098831742</created>
      <option name="number" value="00222" />
      <option name="presentableId" value="LOCAL-00222" />
      <option name="project" value="LOCAL" />
      <updated>1734098831742</updated>
    </task>
    <task id="LOCAL-00223" summary="Fix fixed ranges to be [n, n+1) instead of [n, n)">
      <option name="closed" value="true" />
      <created>1734105136183</created>
      <option name="number" value="00223" />
      <option name="presentableId" value="LOCAL-00223" />
      <option name="project" value="LOCAL" />
      <updated>1734105136183</updated>
    </task>
    <task id="LOCAL-00224" summary="FunctionLoweringInfo is per function to allow for proper calculation of stack slots">
      <option name="closed" value="true" />
      <created>1734197672106</created>
      <option name="number" value="00224" />
      <option name="presentableId" value="LOCAL-00224" />
      <option name="project" value="LOCAL" />
      <updated>1734197672106</updated>
    </task>
    <task id="LOCAL-00225" summary="Linear scan chooses registers deterministically so that unit tests can pass easier">
      <option name="closed" value="true" />
      <created>1734198503482</created>
      <option name="number" value="00225" />
      <option name="presentableId" value="LOCAL-00225" />
      <option name="project" value="LOCAL" />
      <updated>1734198503482</updated>
    </task>
    <task id="LOCAL-00226" summary="Start assembly writer">
      <option name="closed" value="true" />
      <created>1734277262563</created>
      <option name="number" value="00226" />
      <option name="presentableId" value="LOCAL-00226" />
      <option name="project" value="LOCAL" />
      <updated>1734277262563</updated>
    </task>
    <task id="LOCAL-00227" summary="Assembly writer handles some operands and adds assertion to linear scan test">
      <option name="closed" value="true" />
      <created>1734279931050</created>
      <option name="number" value="00227" />
      <option name="presentableId" value="LOCAL-00227" />
      <option name="project" value="LOCAL" />
      <updated>1734279931050</updated>
    </task>
    <task id="LOCAL-00228" summary="Add support for reuse operands in the parser and join intervals for reuse operands in instructions">
      <option name="closed" value="true" />
      <created>1734716248604</created>
      <option name="number" value="00228" />
      <option name="presentableId" value="LOCAL-00228" />
      <option name="project" value="LOCAL" />
      <updated>1734716248604</updated>
    </task>
    <task id="LOCAL-00229" summary="Add parallel moves for callee save registers in prologue and epilogue of functions">
      <option name="closed" value="true" />
      <created>1734800687771</created>
      <option name="number" value="00229" />
      <option name="presentableId" value="LOCAL-00229" />
      <option name="project" value="LOCAL" />
      <updated>1734800687772</updated>
    </task>
    <task id="LOCAL-00230" summary="Linear scan takes register for fixed intervals, recursive function unit test uses stack slots for storing values">
      <option name="closed" value="true" />
      <created>1734880159858</created>
      <option name="number" value="00230" />
      <option name="presentableId" value="LOCAL-00230" />
      <option name="project" value="LOCAL" />
      <updated>1734880159858</updated>
    </task>
    <task id="LOCAL-00231" summary="Revert fix for Eclipse with multiple wildcard patterns and flip order for assertEquals()">
      <option name="closed" value="true" />
      <created>1734913784789</created>
      <option name="number" value="00231" />
      <option name="presentableId" value="LOCAL-00231" />
      <option name="project" value="LOCAL" />
      <updated>1734913784789</updated>
    </task>
    <task id="LOCAL-00232" summary="Update linear scan unit test output (accidentally rewrites fixed registers with stack slots)">
      <option name="closed" value="true" />
      <created>1735064106355</created>
      <option name="number" value="00232" />
      <option name="presentableId" value="LOCAL-00232" />
      <option name="project" value="LOCAL" />
      <updated>1735064106355</updated>
    </task>
    <task id="LOCAL-00233" summary="Fix accidental rewriting of fixed registers with stack slots">
      <option name="closed" value="true" />
      <created>1735065402701</created>
      <option name="number" value="00233" />
      <option name="presentableId" value="LOCAL-00233" />
      <option name="project" value="LOCAL" />
      <updated>1735065402701</updated>
    </task>
    <task id="LOCAL-00234" summary="Writes stack slots in assembly">
      <option name="closed" value="true" />
      <created>1735143501880</created>
      <option name="number" value="00234" />
      <option name="presentableId" value="LOCAL-00234" />
      <option name="project" value="LOCAL" />
      <updated>1735143501880</updated>
    </task>
    <task id="LOCAL-00235" summary="Use temporary register as middleman for moves between two memory operands">
      <option name="closed" value="true" />
      <created>1735144602343</created>
      <option name="number" value="00235" />
      <option name="presentableId" value="LOCAL-00235" />
      <option name="project" value="LOCAL" />
      <updated>1735144602343</updated>
    </task>
    <task id="LOCAL-00236" summary="Start baby pascal scanner and parser">
      <option name="closed" value="true" />
      <created>1735243127738</created>
      <option name="number" value="00236" />
      <option name="presentableId" value="LOCAL-00236" />
      <option name="project" value="LOCAL" />
      <updated>1735243127738</updated>
    </task>
    <task id="LOCAL-00237" summary="Parse types and typed names">
      <option name="closed" value="true" />
      <created>1735947628292</created>
      <option name="number" value="00237" />
      <option name="presentableId" value="LOCAL-00237" />
      <option name="project" value="LOCAL" />
      <updated>1735947628293</updated>
    </task>
    <task id="LOCAL-00238" summary="More parsing for function declarations and statements">
      <option name="closed" value="true" />
      <created>1736127721029</created>
      <option name="number" value="00238" />
      <option name="presentableId" value="LOCAL-00238" />
      <option name="project" value="LOCAL" />
      <updated>1736127721029</updated>
    </task>
    <task id="LOCAL-00239" summary="Attempt parsing binary operator expressions with pratt parsing">
      <option name="closed" value="true" />
      <created>1736282385474</created>
      <option name="number" value="00239" />
      <option name="presentableId" value="LOCAL-00239" />
      <option name="project" value="LOCAL" />
      <updated>1736282385474</updated>
    </task>
    <task id="LOCAL-00240" summary="Parse call expressions">
      <option name="closed" value="true" />
      <created>1736289765301</created>
      <option name="number" value="00240" />
      <option name="presentableId" value="LOCAL-00240" />
      <option name="project" value="LOCAL" />
      <updated>1736289765301</updated>
    </task>
    <task id="LOCAL-00241" summary="Add simplistic parsing of if and while statements">
      <option name="closed" value="true" />
      <created>1736294819002</created>
      <option name="number" value="00241" />
      <option name="presentableId" value="LOCAL-00241" />
      <option name="project" value="LOCAL" />
      <updated>1736294819002</updated>
    </task>
    <task id="LOCAL-00242" summary="Start main function that compiles a file passed in as an argument">
      <option name="closed" value="true" />
      <created>1736353030178</created>
      <option name="number" value="00242" />
      <option name="presentableId" value="LOCAL-00242" />
      <option name="project" value="LOCAL" />
      <updated>1736353030178</updated>
    </task>
    <task id="LOCAL-00243" summary="Add method and tests for parsing program">
      <option name="closed" value="true" />
      <created>1736440939799</created>
      <option name="number" value="00243" />
      <option name="presentableId" value="LOCAL-00243" />
      <option name="project" value="LOCAL" />
      <updated>1736440939800</updated>
    </task>
    <task id="LOCAL-00244" summary="Mention the parser package in README.md">
      <option name="closed" value="true" />
      <created>1736441774955</created>
      <option name="number" value="00244" />
      <option name="presentableId" value="LOCAL-00244" />
      <option name="project" value="LOCAL" />
      <updated>1736441774955</updated>
    </task>
    <task id="LOCAL-00245" summary="Add fibonacci example and handle globals when converting SSA">
      <option name="closed" value="true" />
      <created>1736456189850</created>
      <option name="number" value="00245" />
      <option name="presentableId" value="LOCAL-00245" />
      <option name="project" value="LOCAL" />
      <updated>1736456189850</updated>
    </task>
    <task id="LOCAL-00246" summary="Fix constant propagation to not delete the exit block of a function">
      <option name="closed" value="true" />
      <created>1736531388527</created>
      <option name="number" value="00246" />
      <option name="presentableId" value="LOCAL-00246" />
      <option name="project" value="LOCAL" />
      <updated>1736531388527</updated>
    </task>
    <task id="LOCAL-00247" summary="Match globals as constants and fix interval building for dead virtual register">
      <option name="closed" value="true" />
      <created>1748383740101</created>
      <option name="number" value="00247" />
      <option name="presentableId" value="LOCAL-00247" />
      <option name="project" value="LOCAL" />
      <updated>1748383740101</updated>
    </task>
    <task id="LOCAL-00248" summary="Adds script that links generated assembly with utility functions">
      <option name="closed" value="true" />
      <created>1748444135841</created>
      <option name="number" value="00248" />
      <option name="presentableId" value="LOCAL-00248" />
      <option name="project" value="LOCAL" />
      <updated>1748444135842</updated>
    </task>
    <task id="LOCAL-00249" summary="Add funswap program and fix retrieving physical registers from function parameter virtual registers">
      <option name="closed" value="true" />
      <created>1748478859666</created>
      <option name="number" value="00249" />
      <option name="presentableId" value="LOCAL-00249" />
      <option name="project" value="LOCAL" />
      <updated>1748478859666</updated>
    </task>
    <task id="LOCAL-00250" summary="Fix parsing so that begin/end multiple statements can be used anywhere a statement is expected">
      <option name="closed" value="true" />
      <created>1750260374597</created>
      <option name="number" value="00250" />
      <option name="presentableId" value="LOCAL-00250" />
      <option name="project" value="LOCAL" />
      <updated>1750260374598</updated>
    </task>
    <task id="LOCAL-00251" summary="Start AARCH64 codegen rules">
      <option name="closed" value="true" />
      <created>1751477343202</created>
      <option name="number" value="00251" />
      <option name="presentableId" value="LOCAL-00251" />
      <option name="project" value="LOCAL" />
      <updated>1751477343202</updated>
    </task>
    <task id="LOCAL-00252" summary="Cleanup code generation unit tests and  start unit tests for AARCH64 register allocation">
      <option name="closed" value="true" />
      <created>1751567581854</created>
      <option name="number" value="00252" />
      <option name="presentableId" value="LOCAL-00252" />
      <option name="project" value="LOCAL" />
      <updated>1751567581855</updated>
    </task>
    <task id="LOCAL-00253" summary="Abstract code so that different targets can have different assembly writers">
      <option name="closed" value="true" />
      <created>1751904264060</created>
      <option name="number" value="00253" />
      <option name="presentableId" value="LOCAL-00253" />
      <option name="project" value="LOCAL" />
      <updated>1751904264061</updated>
    </task>
    <task id="LOCAL-00254" summary="Start assembly writer for AARCH64">
      <option name="closed" value="true" />
      <created>1751996237390</created>
      <option name="number" value="00254" />
      <option name="presentableId" value="LOCAL-00254" />
      <option name="project" value="LOCAL" />
      <updated>1751996237390</updated>
    </task>
    <task id="LOCAL-00255" summary="Cleanup instructions with memory operands (with special handling for movs) for AARCH64">
      <option name="closed" value="true" />
      <created>1752108700160</created>
      <option name="number" value="00255" />
      <option name="presentableId" value="LOCAL-00255" />
      <option name="project" value="LOCAL" />
      <updated>1752108700160</updated>
    </task>
    <task id="LOCAL-00256" summary="Abstract out backend isa specific stuff into a Compiler interface">
      <option name="closed" value="true" />
      <created>1752168920400</created>
      <option name="number" value="00256" />
      <option name="presentableId" value="LOCAL-00256" />
      <option name="project" value="LOCAL" />
      <updated>1752168920400</updated>
    </task>
    <option name="localTasksCounter" value="257" />
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.s" />
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.rule" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Update linear scan unit test output (accidentally rewrites fixed registers with stack slots)" />
    <MESSAGE value="Fix accidental rewriting of fixed registers with stack slots" />
    <MESSAGE value="Writes stack slots in assembly" />
    <MESSAGE value="Use temporary register as middleman for moves between two memory operands" />
    <MESSAGE value="Start baby pascal scanner and parser" />
    <MESSAGE value="Parse types and typed names" />
    <MESSAGE value="More parsing for function declarations and statements" />
    <MESSAGE value="Attempt parsing binary operator expressions with pratt parsing" />
    <MESSAGE value="Parse call expressions" />
    <MESSAGE value="Add simplistic parsing of if and while statements" />
    <MESSAGE value="Start main function that compiles a file passed in as an argument" />
    <MESSAGE value="Add method and tests for parsing program" />
    <MESSAGE value="Mention the parser package in README.md" />
    <MESSAGE value="Add fibonacci example and handle globals when converting SSA" />
    <MESSAGE value="Fix constant propagation to not delete the exit block of a function" />
    <MESSAGE value="Match globals as constants and fix interval building for dead virtual register" />
    <MESSAGE value="Adds script that links generated assembly with utility functions" />
    <MESSAGE value="Add funswap program and fix retrieving physical registers from function parameter virtual registers" />
    <MESSAGE value="Fix parsing so that begin/end multiple statements can be used anywhere a statement is expected" />
    <MESSAGE value="Start AARCH64 codegen rules" />
    <MESSAGE value="Cleanup code generation unit tests and  start unit tests for AARCH64 register allocation" />
    <MESSAGE value="Abstract code so that different targets can have different assembly writers" />
    <MESSAGE value="Start assembly writer for AARCH64" />
    <MESSAGE value="Cleanup instructions with memory operands (with special handling for movs) for AARCH64" />
    <MESSAGE value="Abstract out backend isa specific stuff into a Compiler interface" />
    <option name="LAST_COMMIT_MESSAGE" value="Abstract out backend isa specific stuff into a Compiler interface" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <condition expression="operand == null" language="JAVA" />
          <url>file://$PROJECT_DIR$/src/main/java/com/d_m/select/instr/MachinePrettyPrinter.java</url>
          <line>86</line>
          <option name="timeStamp" value="69" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/com/d_m/select/DAGTile.java</url>
          <line>57</line>
          <option name="timeStamp" value="74" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/com/d_m/regalloc/linear/LinearScan.java</url>
          <line>103</line>
          <option name="timeStamp" value="119" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <condition expression="interval.isFixed()" language="JAVA" />
          <url>file://$PROJECT_DIR$/src/main/java/com/d_m/regalloc/linear/LinearScan.java</url>
          <line>46</line>
          <option name="timeStamp" value="171" />
        </line-breakpoint>
        <breakpoint type="java-exception">
          <properties class="java.lang.NullPointerException" package="java.lang">
            <option name="NOTIFY_CAUGHT" value="false" />
          </properties>
          <option name="timeStamp" value="72" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.util.ConcurrentModificationException" package="java.util" />
          <option name="timeStamp" value="105" />
        </breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties>
            <option name="NOTIFY_CAUGHT" value="false" />
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="com.d_m.ssa.Instruction" memberName="uses" />
        <PinnedItemInfo parentTag="com.d_m.select.instr.MachineInstruction" memberName="operands" />
        <PinnedItemInfo parentTag="com.d_m.select.instr.MachineOperandPair" memberName="operand" />
        <PinnedItemInfo parentTag="com.d_m.regalloc.linear.Interval" memberName="virtualReg" />
        <PinnedItemInfo parentTag="com.d_m.regalloc.linear.Range" memberName="end" />
        <PinnedItemInfo parentTag="com.d_m.select.instr.MachineFunction" memberName="blocks" />
        <PinnedItemInfo parentTag="com.d_m.regalloc.linear.Interval" memberName="reg" />
        <PinnedItemInfo parentTag="com.d_m.ssa.Instruction" memberName="operator" />
        <PinnedItemInfo parentTag="com.d_m.select.instr.MachineBasicBlock" memberName="successors" />
        <PinnedItemInfo parentTag="com.d_m.select.reg.RegisterConstraint$UsePhysical" memberName="register" />
        <PinnedItemInfo parentTag="com.d_m.ssa.PhiNode" memberName="type" />
        <PinnedItemInfo parentTag="com.d_m.cfg.Block" memberName="successors" />
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="value" />
        <PinnedItemInfo parentTag="com.d_m.select.instr.MachineBasicBlock" memberName="id" />
        <PinnedItemInfo parentTag="com.d_m.ssa.Instruction" memberName="id" />
        <PinnedItemInfo parentTag="com.d_m.cfg.Block" memberName="code" />
        <PinnedItemInfo parentTag="com.d_m.select.reg.Register$Virtual" memberName="registerClass" />
        <PinnedItemInfo parentTag="com.google.common.collect.ArrayListMultimap" memberName="map" />
        <PinnedItemInfo parentTag="com.d_m.select.DAGTile" memberName="edgeNodes" />
      </pinned-members>
    </pin-to-top-manager>
    <watches-manager>
      <configuration name="JUnit">
        <watch expression="numbering.getInstructionNumber(block.getInstructions().getLast())" language="JAVA" />
      </configuration>
      <configuration name="Application">
        <watch expression="block.getExit()" language="JAVA" />
      </configuration>
    </watches-manager>
  </component>
</project>